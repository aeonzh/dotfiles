" {{{ -- ðŸŒº Vim Plug -- 
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/bundle')
Plug 'neoclide/coc.nvim', { 'branch': 'release' }
Plug 'romainl/vim-cool'
Plug 'folke/tokyonight.nvim', { 'branch': 'main' }

Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/vim-peekaboo'
Plug 'junegunn/goyo.vim', { 'for': 'markdown' }

Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }

Plug 'lilydjwg/colorizer', { 'on': 'ColorHighlight' }
call plug#end()
" }}}

" {{{ -- General --
filetype plugin indent on
set autoread
set autoindent
set backspace=indent,eol,start 
set encoding=utf-8
set hidden
set clipboard=unnamedplus
set lazyredraw
set noerrorbells
set noshowmode
set nowrap
set showmatch
set splitright splitbelow
set wildmenu
set wildmode=list:longest,full
runtime macros/matchit.vim

" -- Tab --
set shiftwidth=4
set tabstop=4
set expandtab
set smarttab

" -- Search --
set hlsearch
set incsearch
set ignorecase
set smartcase
" }}}

" {{{ -- Mappings --
let mapleader="\<Space>"

nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" -- FZF --
nnoremap <leader>a :Rg<CR>
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>f :Files<CR>
nnoremap <leader>l :Lines<CR>

nnoremap <leader>g :Goyo<CR>

" -- CoC --
" Use <Tab> and <S-Tab> to navigate the completion list
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
" Format your code on <cr>
inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm() : "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

" }}}

" {{{ -- UI --
set number relativenumber       " Display line numbers
set cursorline                  " Highlight current line
set signcolumn=yes              " For CoC signs
set scrolloff=5                 " Display at least 5 lines around your cursor (for scrolling)
set laststatus=2

if has('termguicolors')
  set termguicolors
endif

colorscheme tokyonight
let g:tokyonight_style = "night"
set background=dark

" -- ðŸŒ· Goyo --
autocmd User GoyoEnter set wrap linebreak nolist
let g:goyo_width = "85%"
let g:goyo_height = '90%'

" {{{ -- ðŸŒ¸ FZF --
if has('nvim') || has('gui_running')
  let $FZF_DEFAULT_OPTS .= ' --inline-info'
endif

let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" Neovim floating window
if has('nvim')

  if stridx($FZF_DEFAULT_OPTS, '--border') == -1
    let $FZF_DEFAULT_OPTS .= ' --border --margin=0,1'
  endif

  function! FloatingFZF()
    let width = float2nr(&columns * 0.9)
    let height = float2nr(&lines * 0.6)
    let opts = { 'relative': 'editor',
               \ 'row': (&lines - height) / 2,
               \ 'col': (&columns - width) / 2,
               \ 'width': width,
               \ 'height': height }

    let win = nvim_open_win(nvim_create_buf(v:false, v:true), v:true, opts)
    call setwinvar(win, '&winhighlight', 'NormalFloat:Normal')
  endfunction

  let g:fzf_layout = { 'window': 'call FloatingFZF()' }
endif

" FZF hide statusline in Neovim
autocmd! FileType fzf
autocmd  FileType fzf set laststatus=0 noshowmode noruler
  \| autocmd BufLeave <buffer> set laststatus=2 ruler

" FZF with preview
command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)
" }}}

" -- Languages --
" YAML
autocmd FileType yaml setlocal tabstop=2 shiftwidth=2 softtabstop=2

" Makrdown
set conceallevel=2
let g:vim_markdown_conceal = 1
